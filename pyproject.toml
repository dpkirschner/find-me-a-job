[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["agents*", "server*"]
exclude = ["tests*"]

[project]
name = "find-me-a-job"
version = "0.1.0"
description = "An agent orchestrator for job searching activities"
authors = [{name = "Daniel Kirschner", email = "dpkirschner@gmail.com"}]
license = "MIT"
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "fastapi",
    "uvicorn[standard]",
    "langchain",
    "langgraph",
    "langchain-community",
    "pydantic",
    "sse-starlette",
    "httpx",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-asyncio",  # For async test support
    "ruff",
]

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default
select = ["E", "F", "W", "I", "N", "UP", "RUF"]

# Allow autofix for all enabled rules
fixable = ["ALL"]

# Avoid trying to fix flake8-bugbear (`B`) violations
unfixable = ["B"]

# Ignore specific rules
ignore = [
    "E501",  # Line too long (handled by formatter)
]

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
# Tests can have longer lines and more flexible imports
"tests/**/*" = ["E501"]

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"

# Indent with spaces, rather than tabs
indent-style = "space"

# Respect magic trailing commas
skip-magic-trailing-comma = false

[tool.ruff.lint.isort]
# Group imports by type
known-first-party = ["agents", "backend"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"